'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodashWrap = require('../util/lodash-wrap');

var _lodashWrap2 = _interopRequireDefault(_lodashWrap);

var _isConstructor = require('./is-constructor');

var _isConstructor2 = _interopRequireDefault(_isConstructor);

var _log = require('../log');

var _log2 = _interopRequireDefault(_log);

var _anything = require('../stringify/anything');

var _anything2 = _interopRequireDefault(_anything);

var _constructor = require('../constructor');

var _constructor2 = _interopRequireDefault(_constructor);

var _function = require('../function');

var _function2 = _interopRequireDefault(_function);

var _object = require('../object');

var _object2 = _interopRequireDefault(_object);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (realThing, optionalName) {
  if ((0, _isConstructor2.default)(realThing)) {
    return (0, _constructor2.default)(realThing);
  } else if (_lodashWrap2.default.isPlainObject(realThing)) {
    return (0, _object2.default)(realThing);
  } else if (_lodashWrap2.default.isFunction(realThing)) {
    return (0, _function2.default)(realThing, optionalName);
  } else {
    return _log2.default.error('td.replace', '"' + optionalName + '" property was found, but test double only knows how to replace functions, constructors, & objects containing functions (its value was ' + (0, _anything2.default)(realThing) + ').');
  }
};